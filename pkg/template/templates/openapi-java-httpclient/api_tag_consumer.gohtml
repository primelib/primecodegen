{{- /*gotype: github.com/primelib/primecodegen/pkg/openapi/openapigenerator.APIEachTemplate*/ -}}
{{- template "header-singleline" }}

package {{ .Package }};

import feign.RequestLine;
import feign.Param;
import feign.Headers;
import reactor.core.publisher.Mono;
import reactor.core.publisher.Flux;
import io.reactivex.Flowable;

{{- range .Common.Models }}
import {{ $.Common.Packages.Models }}.{{ .Name }};
{{- end }}

{{- range .Common.Operations }}
import {{ $.Common.Packages.Operations }}.{{ .Name }}OperationSpec;
{{- end }}

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.util.List;
import java.util.Map;
import java.util.function.Consumer;
import javax.annotation.processing.Generated;

@Generated(value = "io.github.primelib.primecodegen")
public class {{ .TagType }}ConsumerApi {
    private final {{ .TagType }}Api api;

    public {{ .TagType }}ConsumerApi({{ .TagType }}Api api) {
        this.api = api;
    }

{{ range $op := .TagOperations }}
    /**
    * {{ $op.Name }}
    * {{ $op.Summary }}
    {{- if $op.Description }}
    * {{ $op.Description }}
    {{- end }}
    *
    {{- if $op.MutableParameters }}
    * @param spec a consumer that creates the payload for this operation. Supports the following properties:
    * <ul>
    {{- range $param := $op.MutableParameters }}
    *   <li>{{ $param.Name }}: {{ $param.Description | commentSingleLine }}</li>
    {{- end }}
    * </ul>
    {{- end }}
    {{- if $op.Documentation }}
    {{- range $doc := $op.Documentation }}
    * @see <a href="{{ $doc.URL }}">{{ $doc.Title }}</a>
    {{- end }}
    {{- end }}
    {{- if $op.Deprecated }}
    * @deprecated{{ if $op.DeprecatedReason }} {{ $op.DeprecatedReason | commentSingleLine }}{{ end }}
    {{- end }}
    */
    {{- if eq $op.Stability "experimental" }}
    @ApiStatus.Experimental
    {{- end }}
    {{- if $op.Deprecated }}
    @Deprecated
    {{- end }}
    {{- if $op.Parameters }}
    public {{ $op.ReturnType.QualifiedType }} {{ $op.Name }}(Consumer<{{ $op.Name }}OperationSpec> spec) {
        {{$op.Name }}OperationSpec r = new {{ $op.Name }}OperationSpec(spec);
        {{ if ne $op.ReturnType.QualifiedType "void" }}return {{ end }}api.{{ $op.Name }}({{ range $i, $param := $op.MutableParameters }}r.{{ $param.Name }}(){{ if notLast $op.MutableParameters $i }}, {{ end }}{{ end }});
    }
    {{- else }}
    public {{ $op.ReturnType.QualifiedType }} {{ $op.Name }}() {
        {{ if ne $op.ReturnType.QualifiedType "void" }}return {{ end }}api.{{ $op.Name }}();
    }
    {{- end }}
{{ end }}
}
